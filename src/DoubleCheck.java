public class DoubleCheck {
    private DoubleCheck(){}
    private static volatile DoubleCheck instance;
    //?????doublecheck???????????????voltaile???????????new?????????????????????????????????????裬
    //1 memory = allocate();????????????? 2 ctorInstance(memory)????????? 3.instance = memory?????????????????
    //?????????????????????????????????????????????jvm?????????????????????????132??????????????????????????п???
    //????????????????????????????????????
    //1.???1????getInstance
    // 2.????instance==null ???????synchronized?????
    // 3.????instance==null ???????new DoubleCheck() ?????new?У??????????????????132????????1?????instance = memory
    //??????????л????????2 ???????????instance??=null ?????????????????г?????????
    // 4.???1?л??????2
    // 5.???2?ж? instace??=null return instance ??????2????????δ??????????
    // 6.???2???????л??????1?????1?????????3??????
    // ?????????volatile???????????????????????????????????????????????????132?????????????????
    public static DoubleCheck getInstance()
    {
        if(instance == null)//????doublecheck?????????????????????????????????????????????synchronized??Ч????
        //????????????????????????????ε????????????????????????????????????е??????????????????????????ж?
        //??????????instance???????????????????synchronized????飬??????????????????Ч???
        {
            synchronized (DoubleCheck.class){
                if(instance == null)

                    instance = new DoubleCheck();
            }


        }
        return instance;
    }
}
